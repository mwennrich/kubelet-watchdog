apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
  name: privpod
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp-privpod
spec:
  allowPrivilegeEscalation: true
  privileged: true
  fsGroup:
    rule: RunAsAny
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
  hostNetwork: true
  hostIPC: true
  hostPID: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp-privpod-role
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - psp-privpod
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: psp-rolebinding-privpod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp-privpod-role
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: privpod
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: priv-pod
  namespace: default
  labels:
    app: priv-pod
spec:
  selector:
    matchLabels:
      app: priv-pod
  template:
    metadata:
      labels:
        app: priv-pod
    spec:
      affinity: {}
      serviceAccount: privpod
      serviceAccountName: privpod
      containers:
      - name: busybox
        image: busybox
        stdin: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: host-root-volume
          mountPath: /host
      volumes:
      - name: host-root-volume
        hostPath:
          path: /
      hostNetwork: true
      hostPID: true
      restartPolicy: Always
